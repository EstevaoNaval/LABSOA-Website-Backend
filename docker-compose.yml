services:
  # Serviço do Django (web)
  django-api:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/app
      - ./data:/app/data
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - labsoadb
      - rabbitmq
      - memcached

  # Serviço Celery Worker para PDF (com acesso ao Django e ao pdf_processor)
  chemicals_celery_worker:
    build:
      context: ./pdf2chemicals # Usar o Dockerfile do pdf2chemicals
    volumes:
      - .:/app # Montar o código do Django e o app pdf_processor como volume
      - ./data:/app/data
    environment:
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
    depends_on:
      - rabbitmq
    command:
      [
        "conda",
        "run",
        "-n",
        "pdf2chemicals",
        "python",
        "-m",
        "celery",
        "-A",
        "labsoa_website_backend",
        "worker",
        "--loglevel=info",
      ]

  labsoadb:
    build:
      context: ./labsoadb
      dockerfile: Dockerfile
    environment:
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_DB: ${DATABASE_NAME}
    ports:
      - "5432:5432"

  memcached:
    image: "memcached:1.6"
    ports:
      - "11211:11211"
    command: -m 512

  # Serviço RabbitMQ (broker de mensagens)
  rabbitmq:
    image: rabbitmq:4-management
    ports:
      - "5672:5672" # Porta padrão do RabbitMQ
      - "15672:15672" # Porta para a interface de administração do RabbitMQ

  clam_container_01:
    container_name: clam_container_01
    image: clamav/clamav:1.0.7
    ports:
      - "3310:3310"
      - "7357:7357"
    volumes:
      - clamav-data:/var/lib/clamav
      - "clamav-logs:/var/log/clamav"
    restart: unless-stopped

volumes:
  clamav-data:
  clamav-logs:
